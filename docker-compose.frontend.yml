# NOTE: Generate `../kobo-env/` environment files using
# https://github.com/kobotoolbox/kobo-install. You may manually customize the
# files afterwards and stop using kobo-install if necessary.
version: '3'

services:
  kpi:
    image: kobotoolbox/kpi:2.024.09
    hostname: kpi
    env_file:
      - ../kobo-env/envfiles/aws.txt
      - ../kobo-env/envfiles/databases.txt
      - ../kobo-env/envfiles/django.txt
      - ../kobo-env/envfiles/external_services.txt
      - ../kobo-env/envfiles/domains.txt
      - ../kobo-env/envfiles/smtp.txt
    sysctls:
      - net.core.somaxconn=2048
    environment:
      - KPI_UWSGI_MAX_REQUESTS=512
      - KPI_UWSGI_WORKERS_COUNT=2
      - KPI_UWSGI_CHEAPER_RSS_LIMIT_SOFT=134217728
      - KPI_UWSGI_CHEAPER_WORKERS_COUNT=1
      - KPI_UWSGI_HARAKIRI=120
      - KPI_UWSGI_WORKER_RELOAD_MERCY=120
    volumes:
      - ./.vols/static/kpi:/srv/static
      - ./log/kpi:/srv/logs
      - ./scripts/wait_for_mongo.bash:/srv/init/wait_for_mongo.bash:ro
      - ./scripts/wait_for_postgres.bash:/srv/init/wait_for_postgres.bash:ro
      # Persistent storage for FileFields when S3 not used (e.g. exports, uploaded map layers)
      - ./.vols/kpi_media:/srv/src/kpi/media
      # Allow access to KoBoCAT media uploads within KPI
      - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
    restart: unless-stopped
    networks:
      kobo-fe-network:
        aliases:
          - kpi.docker.container
          - kpi.internal
          - kobocat.docker.container
          - kobocat.internal
    command: "bash -c exec /entrypoint.sh"

#  worker:
#    image: kobotoolbox/kpi:2.024.09
#    hostname: worker
#    env_file:
#      - ../kobo-env/envfiles/aws.txt
#      - ../kobo-env/envfiles/databases.txt
#      - ../kobo-env/envfiles/django.txt
#      - ../kobo-env/envfiles/external_services.txt
#      - ../kobo-env/envfiles/domains.txt
#      - ../kobo-env/envfiles/smtp.txt
#    volumes:
#      - ./.vols/static/kpi:/srv/static
#      - ./log/kpi:/srv/logs
#      - ./scripts/wait_for_mongo.bash:/srv/init/wait_for_mongo.bash:ro
#      - ./scripts/wait_for_postgres.bash:/srv/init/wait_for_postgres.bash:ro
#      # Persistent storage for FileFields when S3 not used (e.g. exports, uploaded map layers)
#      - ./.vols/kpi_media:/srv/src/kpi/media
#      # Allow access to KoBoCAT media uploads within KPI
#      - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
#    restart: unless-stopped
#    command: celery -A kobo worker --loglevel=info \
#      --hostname=kpi_main_worker@%h \
#      --logfile=/srv/logs/celery_kpi.log \
#      --pidfile=/tmp/celery_kpi.pid \
#      --queues=kpi_queue \
#      --exclude-queues=kpi_low_priority_queue,kobocat_queue \
#      --uid=$${UWSGI_USER} \
#      --gid=$${UWSGI_GROUP} \
#      --autoscale $${CELERY_AUTOSCALE_MIN},$${CELERY_AUTOSCALE_MAX}
#
#  worker_low_priority:
#    image: kobotoolbox/kpi:2.024.09
#    hostname: worker_low_priority
#    env_file:
#      - ../kobo-env/envfiles/aws.txt
#      - ../kobo-env/envfiles/databases.txt
#      - ../kobo-env/envfiles/django.txt
#      - ../kobo-env/envfiles/external_services.txt
#      - ../kobo-env/envfiles/domains.txt
#      - ../kobo-env/envfiles/smtp.txt
#    volumes:
#      - ./.vols/static/kpi:/srv/static
#      - ./log/kpi:/srv/logs
#      - ./scripts/wait_for_mongo.bash:/srv/init/wait_for_mongo.bash:ro
#      - ./scripts/wait_for_postgres.bash:/srv/init/wait_for_postgres.bash:ro
#      # Persistent storage for FileFields when S3 not used (e.g. exports, uploaded map layers)
#      - ./.vols/kpi_media:/srv/src/kpi/media
#      # Allow access to KoBoCAT media uploads within KPI
#      - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
#    restart: unless-stopped
#    command: celery -A kobo worker --loglevel=info \
#      --hostname=kpi_main_worker@%h \
#      --logfile=/srv/logs/celery_kpi.log \
#      --pidfile=/tmp/celery_kpi.pid \
#      --queues=kpi_queue \
#      --exclude-queues=kpi_low_priority_queue,kobocat_queue \
#      --uid=$${UWSGI_USER} \
#      --gid=$${UWSGI_GROUP} \
#      --autoscale $${CELERY_AUTOSCALE_MIN},$${CELERY_AUTOSCALE_MAX}
#
#  worker_kobocat:
#    image: kobotoolbox/kpi:2.024.09
#    hostname: worker_kobocat
#    env_file:
#      - ../kobo-env/envfiles/aws.txt
#      - ../kobo-env/envfiles/databases.txt
#      - ../kobo-env/envfiles/django.txt
#      - ../kobo-env/envfiles/external_services.txt
#      - ../kobo-env/envfiles/domains.txt
#      - ../kobo-env/envfiles/smtp.txt
#    volumes:
#      - ./.vols/static/kpi:/srv/static
#      - ./log/kpi:/srv/logs
#      - ./scripts/wait_for_mongo.bash:/srv/init/wait_for_mongo.bash:ro
#      - ./scripts/wait_for_postgres.bash:/srv/init/wait_for_postgres.bash:ro
#      # Persistent storage for FileFields when S3 not used (e.g. exports, uploaded map layers)
#      - ./.vols/kpi_media:/srv/src/kpi/media
#      # Allow access to KoBoCAT media uploads within KPI
#      - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
#    restart: unless-stopped
#    command: celery -A kobo worker --loglevel=info \
#      --hostname=kobocat_main_worker@%h \
#      --logfile=/srv/logs/celery_kobocat.log \
#      --pidfile=/tmp/celery_kobocat.pid \
#      --queues=kobocat_queue \
#      --exclude-queues=kpi_low_priority_queue,kpi_queue \
#      --uid=$${UWSGI_USER} \
#      --gid=$${UWSGI_GROUP} \
#      --autoscale $${CELERY_AUTOSCALE_MIN},$${CELERY_AUTOSCALE_MAX}
#
#  beat:
#    image: kobotoolbox/kpi:2.024.09
#    hostname: beat
#    env_file:
#      - ../kobo-env/envfiles/aws.txt
#      - ../kobo-env/envfiles/databases.txt
#      - ../kobo-env/envfiles/django.txt
#      - ../kobo-env/envfiles/external_services.txt
#      - ../kobo-env/envfiles/domains.txt
#      - ../kobo-env/envfiles/smtp.txt
#    volumes:
#      - ./.vols/static/kpi:/srv/static
#      - ./log/django:/srv/logs
#      - ./scripts/wait_for_mongo.bash:/srv/init/wait_for_mongo.bash:ro
#      - ./scripts/wait_for_postgres.bash:/srv/init/wait_for_postgres.bash:ro
#      # Persistent storage for FileFields when S3 not used (e.g. exports, uploaded map layers)
#      - ./.vols/kpi_media:/srv/src/kpi/media
#      # Allow access to KoBoCAT media uploads within KPI
#      - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
#    restart: unless-stopped
#    command: celery -A kobo beat --loglevel=info \
#      --logfile=/srv/logs/celery_beat.log \
#      --pidfile=/tmp/celery_beat.pid \
#      --scheduler django_celery_beat.schedulers:DatabaseScheduler \
#      --uid=$${UWSGI_USER} \
#      --gid=$${UWSGI_GROUP}
#
  nginx:
    image: nginx:1.23
    hostname: nginx
    env_file:
      - ../kobo-env/envfiles/domains.txt
      - ../kobo-env/envfiles/databases.txt
      - ../kobo-env/envfiles/django.txt
    environment:
      - UWSGI_PASS_TIMEOUT=130
      - TEMPLATED_VAR_REFS=$${PUBLIC_REQUEST_SCHEME} $${INTERNAL_DOMAIN_NAME} $${PUBLIC_DOMAIN_NAME} $${KOBOFORM_PUBLIC_SUBDOMAIN} $${KOBOCAT_PUBLIC_SUBDOMAIN} $${ENKETO_EXPRESS_PUBLIC_SUBDOMAIN}
    volumes:
        - ./.vols/static:/srv/www:ro
        - ./log/nginx:/var/log/nginx
        - ./.vols/kobocat_media_uploads:/media
        - ./.vols/kpi_media/__public:/srv/kpi_media/__public:ro
        - ./nginx/docker-entrypoint.d/30-init-kobo-nginx.sh:/docker-entrypoint.d/30-init-kobo-nginx.sh
        - ./nginx/kobo-docker-scripts/:/kobo-docker-scripts
    restart: unless-stopped
    networks:
      kobo-fe-network:
        aliases:
          - nginx.internal
          - nginx.docker.container

  enketo_express:
    image: kobotoolbox/enketo-express-extra-widgets:6.2.2
    hostname: enketo_express
    env_file:
      - ../kobo-env/envfiles/domains.txt
    restart: unless-stopped
    volumes:
      - ../kobo-env/enketo_express/config.json:/srv/src/enketo_express/config/config.json
    networks:
      kobo-fe-network:
        aliases:
          - enketo_express.internal
          - enketo_express.docker.container

networks:
  kobo-fe-network:
    driver: bridge
